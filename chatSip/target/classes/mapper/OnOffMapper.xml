<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="haidian.chatSip.dao.OnOffMapper" >
  <resultMap id="BaseResultMap" type="haidian.chatSip.pojo.OnOff" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="isValid" property="isvalid" jdbcType="INTEGER" />
    <result column="sendTime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="receiveTime" property="receivetime" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, userId, isValid, sendTime, receiveTime, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_onoff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_onoff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="haidian.chatSip.pojo.OnOff" useGeneratedKeys="true" keyProperty="id" >
    insert into t_onoff (type, userId, isValid, 
      sendTime, receiveTime, createTime, 
      updateTime)
    values (#{type,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{isvalid,jdbcType=INTEGER}, 
      #{sendtime,jdbcType=TIMESTAMP}, #{receivetime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="haidian.chatSip.pojo.OnOff" useGeneratedKeys="true" keyProperty="id" >
    insert into t_onoff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        type,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="isvalid != null" >
        isValid,
      </if>
      <if test="sendtime != null" >
        sendTime,
      </if>
      <if test="receivetime != null" >
        receiveTime,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="haidian.chatSip.pojo.OnOff" >
    update t_onoff
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        isValid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null" >
        sendTime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivetime != null" >
        receiveTime = #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="haidian.chatSip.pojo.OnOff" >
    update t_onoff
    set type = #{type,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      isValid = #{isvalid,jdbcType=INTEGER},
      sendTime = #{sendtime,jdbcType=TIMESTAMP},
      receiveTime = #{receivetime,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>